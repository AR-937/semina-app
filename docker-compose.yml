
services:
  seminarparticipants.api:
    image: ${DOCKER_REGISTRY-}seminarparticipantsapi
    build:
      context: .
      dockerfile: SeminarParticipants.Api/Dockerfile
    ports:
      - "7075:7075"      
    depends_on: [mssql, seq_logs]
    networks:
      - app-network
  seminarparticipants.mvc:
    image: ${DOCKER_REGISTRY-}seminarparticipantsmvc
    build:
      context: .
      dockerfile: SeminarParticipants.MVC/Dockerfile
    ports:
      - "7078:7078"
    depends_on:
      - seminarparticipants.api
    networks:
      - app-network
  mssql:
    image: "axxr/seminarparticipantsdb"
    container_name: mssql_dc
    hostname: mssql
    environment: 
      - MSSQL_SA_PASSWORD=p@ssw0rd
      - ACCEPT_EULA=Y
      - MSSQL_DATA_DIR=/var/opt/sqlserver/data
      - MSSQL_LOG_DIR=/var/opt/sqlserver/log
      - MSSQL_BACKUP_DIR=/var/opt/sqlserver/backup
    restart: unless-stopped
    ports:
      - "1401:1433" 
    volumes: 
          - sqlsystem:/var/opt/mssql/
          - sqldata:/var/opt/sqlserver/data
          - sqllog:/var/opt/sqlserver/log
          - sqlbackup:/var/opt/sqlserver/backup
    networks:
      - app-network
  seq_logs:
    image: datalust/seq
    restart: unless-stopped
    ports:
      - "5342:80"
    environment:
      - ACCEPT_EULA=Y
    networks:
      - app-network
  nginx:
    build:
      context: . 
      dockerfile: nginx/Dockerfile
    ports:
      - "44391:44391"
    depends_on:
      - seminarparticipants.mvc
    networks:
      app-network:
        aliases:
          - "seminarparticipants.com"
          - "api.seminarparticipants.com"
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  sqlsystem:
  sqldata:
  sqllog:
  sqlbackup: